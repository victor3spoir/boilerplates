---
# Role
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-role

rules:
  - apiGroups:
      - ""
    resources:
      - services
      - secrets
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.io
    resources:
      - middlewares
      - middlewaretcps
      - ingressroutes
      - traefikservices
      - ingressroutetcps
      - ingressrouteudps
      - tlsoptions
      - tlsstores
      - serverstransports
      - serverstransporttcps
    verbs:
      - get
      - list
      - watch
---
# Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-account
---
# Role binding
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-role-binding

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-role
subjects:
  - kind: ServiceAccount
    name: traefik-account
    namespace: default # This tutorial uses the "default" K8s namespace.
---
#  Deploy/Daeamon
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: traefik
  labels:
    app: traefik
spec:
  # replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-account
      containers:
        - name: traefik
          image: traefik:v3.3
          args:
            - --api.insecure
            - --providers.kubernetesingress=true
            - --global.checknewversion=true
            - --global.sendanonymoususage=false
            - --log.level=DEBUG
            - --entryPoints.http.address=:80
            - --entryPoints.https.address=:443
            - --entryPoints.http.http.redirections.entryPoint.to=https
            - --entryPoints.http.http.redirections.entryPoint.scheme=https
            - --certificatesResolvers.letsencrypt.acme.email=user@domain.com
            - --certificatesResolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
            - --certificatesResolvers.letsencrypt.acme.storage=/var/traefik/certs/letsencrypt-acme.json
            - --certificatesResolvers.letsencrypt.acme.httpChallenge.entrypoint=http
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
            - name: dashboard
              containerPort: 8080
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: traefik-dashboard-service
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: dashboard
  selector:
    app: traefik
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-http-service
spec:
  type: LoadBalancer
  ports:
    - targetPort: http
      port: 80
  selector:
    app: traefik
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-https-service
spec:
  type: LoadBalancer
  ports:
    - targetPort: https
      port: 443
  selector:
    app: traefik
