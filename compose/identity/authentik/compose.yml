name: authentik

# Intial setup: /if/flow/initial-setup/

networks:
  dockernet:
    external: true
  authentiknet: {}

x-authentik: &authentik
  environment:
    - AUTHENTIK_SECRET_KEY
    - AUTHENTIK_REDIS__HOST
    - AUTHENTIK_POSTGRESQL__HOST
    - AUTHENTIK_POSTGRESQL__USER
    - AUTHENTIK_POSTGRESQL__NAME
    - AUTHENTIK_POSTGRESQL__PASSWORD

volumes:
  authentik-db-vol:
    driver: local
    # driver_opts:
    #   type: nfs4
    #   o: 'addr=127.0.0.1'
    #   device: ':/mnt/storage/authentik/db'
  authentik-redis-vol:
    driver: local
    # driver_opts:
    #   type: nfs4
    #   o: 'addr=127.0.0.1'
    #   device: ':/mnt/storage/authentik/redis'

services:
  authentik-db:
    image: postgres:17-alpine
    restart: unless-stopped
    networks:
      - authentiknet
    deploy:
      resources:
        limits:
          memory: 200Mib
          cpus: 0.2
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}']
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - authentik-db-vol:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER
      - POSTGRES_DB
      - POSTGRES_PASSWORD

  authentik-redis:
    image: redis:alpine
    restart: unless-stopped
    command: --save 60 1 --loglevel warning
    deploy:
      resources:
        limits:
          memory: 200Mib
          cpus: 0.2
    networks:
      - authentiknet
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping | grep PONG']
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - authentik-redis-vol:/data
  authentik-worker:
    <<: *authentik
    image: ghcr.io/goauthentik/server:2025.6.1
    restart: unless-stopped
    command: worker
    deploy:
      resources:
        limits:
          memory: 1000Mib
          cpus: 0.5
    networks:
      - authentiknet
      - dockernet
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates

    depends_on:
      authentik-db:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy
  authentik-server:
    <<: *authentik
    image: ghcr.io/goauthentik/server:2025.6.1
    restart: unless-stopped
    command: server
    deploy:
      resources:
        limits:
          memory: 600Mib
          cpus: 0.6
    networks:
      - dockernet
      - authentiknet
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
    # ports:
      # - 127.0.0.1:39000:9000
      # - 127.0.0.1:49443:9443
    depends_on:
      authentik-db:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy
    labels:
      - traefik.enable=true
      # - (routers)
      - traefik.http.routers.authentik-rtr.entrypoints=http,https
      - traefik.http.routers.authentik-rtr.rule=Host(`authentik.<domain.com>`)
      - traefik.http.routers.authentik-rtr.tls=true
      - traefik.http.routers.authentik-rtr.tls.certresolver=<letsencrypt>
      # - (service)
      - traefik.http.routers.authentik-rtr.service=authentik-svc
      - traefik.http.services.authentik-svc.loadbalancer.server.port=9000
