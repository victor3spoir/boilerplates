volumes:
  kestra-db-storage:
    name: kestra-db-storage
  kestra-web-data:
    name: kestra-web-data

networks:
  dockernet:
    external: true

services:
  kestra-db:
    image: postgres:17-alpine
    # volumes:
    #   - kestra-db-storage:/var/lib/postgresql/data
    networks:
      - dockernet
    environment:
      - POSTGRES_DB=kestra
      - POSTGRES_USER=kestra
      - POSTGRES_PASSWORD=k3str4
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}']
      interval: 30s
      timeout: 10s
      retries: 10

  kestra-web:
    image: kestra/kestra:develop
    # command: server standalone
    command: server local
    user: root
    ports:
      - 38080:8080
      - 38081:8081
    networks:
      - dockernet
    # volumes:
    # - /var/run/docker.sock:/var/run/docker.sock
    # - kestra-web-data:/app/storage
    # - ./application.yaml:/etc/config/application.yaml:ro
    # - /tmp:/tmp/
    # environment:

    labels:
      - traefik.enable=true
      - traefik.http.routers.kestra-rtr.entrypoints=http,https
      - traefik.http.routers.kestra-rtr.rule=Host(`kestra.homestack.me`)
      - traefik.http.routers.kestra-rtr.tls=true
      - traefik.http.routers.kestra-rtr.tls.certresolver=letsencrypt
      - traefik.http.services.kestra-svc.loadbalancer.server.port=8080
    depends_on:
      kestra-db:
        condition: service_started
