image:
  registry: docker.io
  repository: traefik
  tag: v3.3
  pullPolicy: IfNotPresent

# deployment:
#   initContainers:
#     - name: volume-permissions
#       image: busybox:latest
#       command: ["sh", "-c", "chmod -v 600 /acme.json"]
#       volumeMounts:
#         - name: data
#           mountPath: /

ingressClass:
  enabled: true
  isDefaultClass: true

ingressRoute:
  dashboard:
    enabled: false

# -- Additional arguments to be passed at Traefik's binary
# See [CLI Reference](https://docs.traefik.io/reference/static-configuration/cli/)
# Use curly braces to pass values: `helm install --set="additionalArguments={--providers.kubernetesingress.ingressclass=traefik-internal,--log.level=DEBUG}"`
additionalArguments:
  - "--log.level=DEBUG"
  - "--api.insecure=true"
  - "--global.checknewversion=true"
  - "--global.sendanonymoususage=false"
  - "--entryPoints.http.address=:80"
  - "--entryPoints.https.address=:443"
  # - "--entryPoints.http.http.redirections.entryPoint.to=https"
  # - "--entryPoints.http.http.redirections.entryPoint.scheme=https"

env:
  []
  # - name: CF_API_EMAIL
  #   valueFrom:
  #     secretKeyRef:
  #       name: cloudflare_secret
  #       key: email
  # - name: CF_API_KEY
  #   valueFrom:
  #     secretKeyRef:
  #       name: cloudflare_secret
  #       key: key

# -- Environment variables to be passed to Traefik's binary from configMaps or secrets
envFrom: []

ports:
  traefik:
    port: 8080
    hostPort: 8080
    containerPort: 8080
    expose:
      default: true
    exposedPort: 8080
    protocol: TCP
  http:
    asDefault: true
    exposedPort: 80
    ## -- Enable this entrypoint as a default entrypoint. When a service doesn't explicitly set an entrypoint it will only use this entrypoint.
    # asDefault: true
    port: 80
    hostPort: 80
    containerPort: 80
    expose:
      default: true
    ## -- Different target traefik port on the cluster, useful for IP type LB
    targetPort: 80 # @schema type:[string, integer, null]; minimum:0
    # The port protocol (TCP/UDP)
    protocol: TCP
  https:
    # asDefault: true
    # certResolver: cloudflare
    ## -- Enable this entrypoint as a default entrypoint. When a service doesn't explicitly set an entrypoint it will only use this entrypoint.
    # asDefault: true
    port: 443
    hostPort: 443
    containerPort: 443
    expose:
      default: true
    exposedPort: 443
    ## -- Different target traefik port on the cluster, useful for IP type LB
    ## -- The port protocol (TCP/UDP)
    # -- See [upstream documentation](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport)

persistence:
  # -- Enable persistence using Persistent Volume Claims
  # ref: http://kubernetes.io/docs/user-guide/persistent-volumes/.
  # It can be used to store TLS certificates along with `certificatesResolvers.<name>.acme.storage`  option
  enabled: true
  name: ssl-certs
  # existingClaim: ""
  # accessMode: ReadWriteOnce
  size: 128Mi
  # storageClass: ""
  # volumeName: ""
  path: /data # path to ssl certs in traefik container
  annotations: {}
