networks:
  dockernet:
    external:
      true


services:
  authentik.psql:
    image: docker.io/library/postgres:16-alpine
    restart: unless-stopped
    container_name: authentik.psql
    networks:
      - dockernet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - authentik_db_pgsql:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_DB=${PG_DB}
    env_file:
      - .env
    labels:
      - traefik.enable=true

  authentik.redis:
    image: docker.io/library/redis:alpine
    container_name: authentik.redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    networks:
      - dockernet
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - authentik_db_redis:/data
    # labels:
    #   - traefik.enable=true

  authentik.server:
    image: ghcr.io/goauthentik/server:2024.4.0
    restart: unless-stopped
    container_name: authentik.server
    networks:
      - dockernet
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST=authentik.redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik.psql
      - AUTHENTIK_POSTGRESQL__USER=${PG_USER}
      - AUTHENTIK_POSTGRESQL__NAME=${PG_DB}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${PG_PASS}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=${AUTHENTIK_ERROR_REPORTING__ENABLED}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
    volumes:
      - ./media:/media
      - ./templates:/templates
    env_file:
      - .env
    # ports:
    #   - "9000:9000"
    #   - "9443:9443"
    depends_on:
      - authentik.psql
      - authentik.redis
    labels:
      - traefik.enable=true
      - traefik.http.routers.authentik-rtr.entrypoints=http,https
      - traefik.http.routers.authentik-rtr.rule=Host(`authentik.homestack.me`)
      - traefik.http.routers.authentik-rtr.tls=true
      - traefik.http.routers.authentik-rtr.tls.certresolver=development
      - traefik.http.routers.authentik-rtr.service=authentik-svc
      - traefik.http.services.authentik-svc.loadbalancer.server.port=9000
  
  authentik.worker:
    image: ghcr.io/goauthentik/server:2024.4.0
    restart: unless-stopped
    container_name: authentik.worker
    command: worker
    networks:
      - dockernet
    environment:
      - AUTHENTIK_REDIS__HOST=authentik.redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik.psql
      - AUTHENTIK_POSTGRESQL__USER=${PG_USER}
      - AUTHENTIK_POSTGRESQL__NAME=${PG_DB}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${PG_PASS}
    # user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/media
      # - ./certs:/certs
      - ./templates:/templates
    env_file:
      - .env
    depends_on:
      - authentik.psql
      - authentik.redis
    # labels:
    #   - traefik.enable=true

volumes:
  authentik_db_pgsql:
  authentik_db_redis:

