networks:
  <dockernet>:
    external: true

volumes:
  authentik-db-data:
    name: authentik-db-data
  authentik-redis-data:
    name: authentik-redis-data

services:
  authentik-db:
    image: postgres:17-alpine
    restart: unless-stopped
    networks:
      - <dockernet>
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}']
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - authentik-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_DB=${PG_DB}

  authentik-redis:
    image: redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    networks:
      - <dockernet>
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping | grep PONG']
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - authentik-redis-data:/data

  authentik-server:
    image: ghcr.io/goauthentik/server:2025.2.1
    restart: unless-stopped
    networks:
      - <dockernet>
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik-db
      - AUTHENTIK_POSTGRESQL__USER=${PG_USER}
      - AUTHENTIK_POSTGRESQL__NAME=${PG_DB}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${PG_PASS}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=${AUTHENTIK_ERROR_REPORTING__ENABLED}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
    volumes:
      - ./media:/media
      - ./templates:/templates
    depends_on:
      - authentik-db
      - authentik-redis
    labels:
      - traefik.enable=true
      # - (routers)
      - traefik.http.routers.authentik-rtr.entrypoints=http,https
      - traefik.http.routers.authentik-rtr.rule=Host(`authentik.domain.com`)
      - traefik.http.routers.authentik-rtr.tls=true
      - traefik.http.routers.authentik-rtr.tls.certresolver=cloudflare
      # - (service)
      - traefik.http.routers.authentik-rtr.service=authentik-svc
      - traefik.http.services.authentik-svc.loadbalancer.server.port=9000

  authentik-worker:
    image: ghcr.io/goauthentik/server:2025.2.1
    restart: unless-stopped
    command: worker
    networks:
      - <dockernet>
    environment:
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik-db
      - AUTHENTIK_POSTGRESQL__USER=${PG_USER}
      - AUTHENTIK_POSTGRESQL__NAME=${PG_DB}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${PG_PASS}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/media
      - ./templates:/templates
    depends_on:
      - authentik-db
      - authentik-redis
